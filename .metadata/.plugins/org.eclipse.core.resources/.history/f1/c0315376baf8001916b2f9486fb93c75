package steps;

import java.util.Map;

import base.StepBase;
import io.cucumber.java.en.Given;
import io.restassured.RestAssured;
import io.restassured.authentication.PreemptiveBasicAuthScheme;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.response.ResponseOptions;
import io.restassured.specification.RequestSpecification;
import pojos.AuthorizePaymentBody;
import pojos.CardExpiryDate;
import pojos.Create_Token_Body;
import pojos.Instruction;
import pojos.Merchant;
import pojos.Narrative;
import pojos.PaymentInstrument;
import pojos.Value;
import utility.Common;
import utility.Configuration;
import utility.RestAssuredHelper;

public class Payment_Steps extends StepBase {
	
	public static ResponseOptions<Response> res;
	Common commonUtility = new Common();
	
	
	
	@Given("I perform POST operation for authorize payment")
	public void i_perform_POST_operation_for_authorize_payment() {
		Merchant merchant = new Merchant("default");
		Narrative narrative = new Narrative("trading name");
		Value value = new Value("GBP", 250);
		CardExpiryDate cardExpiryDate = new CardExpiryDate(12,2020);
		PaymentInstrument paymentInstrument = new PaymentInstrument("card/plain","4444333322221111",  cardExpiryDate, "John Appleseed");
		Instruction instruction = new Instruction(narrative, value, paymentInstrument);
		AuthorizePaymentBody user = new AuthorizePaymentBody("588a6355-5c78-4ce3-bb34-d7f0a9d21cty", merchant, instruction);
		
		System.out.println("teh link is  " + user.toString());
		
		String body  = "{\r\n" + 
				"  \"transactionReference\": \"31c95db2-9ec3-4a80-a401-ff10a0aad69c\",\r\n" + 
				"  \"merchant\": {\r\n" + 
				"    \"entity\": \"default\"\r\n" + 
				"  },\r\n" + 
				"  \"instruction\": {\r\n" + 
				"    \"narrative\": {\r\n" + 
				"      \"line1\": \"trading name\"\r\n" + 
				"    },\r\n" + 
				"    \"value\": {\r\n" + 
				"      \"currency\": \"GBP\",\r\n" + 
				"      \"amount\": 250\r\n" + 
				"    },\r\n" + 
				"    \"paymentInstrument\": {\r\n" + 
				"      \"type\": \"card/plain\",\r\n" + 
				"      \"cardNumber\": \"4444333322221111\",\r\n" + 
				"      \"cardHolderName\": \"John Appleseed\",\r\n" + 
				"      \"cardExpiryDate\": {\r\n" + 
				"        \"month\": 12,\r\n" + 
				"        \"year\": 2020\r\n" + 
				"      }\r\n" + 
				"    }\r\n" + 
				"  }\r\n" + 
				"}";

//		System.out.println(new Common().stringToMap(Configuration.getConfigurationValue("paymentHeader")));
//		
//		res = RestAssuredHelper.PostOpsWithJsonBodyAndHeader(iWorldPay.getPaymentsAuthorize(), body, new Common().stringToMap(Configuration.getConfigurationValue("paymentHeader")));
//		
		utility.Configuration.getConfiguration();
    	PreemptiveBasicAuthScheme auth = new PreemptiveBasicAuthScheme();
        RequestSpecBuilder builder = new RequestSpecBuilder();
        
        builder.setBaseUri( "https://try.access.worldpay.com/payments/authorizations");
       
        builder.addHeaders(new Common().stringToMap(Configuration.getConfigurationValue("paymentHeader")));
        auth.setUserName(Configuration.getConfigurationValue("username"));
        auth.setPassword(Configuration.getConfigurationValue("password"));
        builder.setAuth(auth);
       
        RequestSpecification Request = RestAssured.given().spec(builder.build());
        Request.body(user);
        ResponseOptions<Response> res = Request.post("https://try.access.worldpay.com/payments/authorizations");
        
        
        Response res1 = (Response) res.getBody();
		   String s = commonUtility.responseToString(res1);
		   
		   
        System.out.println("manjula "+s);
		
		
	}

	@Given("the currency is {string}")
	public void the_currency_is(String string) {
	    // Write code here that turns the phrase above into concrete actions
	    throw new cucumber.api.PendingException();
	}

	@Given("the amount is {string}")
	public void the_amount_is(String string) {
	    // Write code here that turns the phrase above into concrete actions
	    throw new cucumber.api.PendingException();
	}


}
